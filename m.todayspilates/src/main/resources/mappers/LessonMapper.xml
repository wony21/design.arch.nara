<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="m.todays.pilates.domain.lesson.LessonMapper">
    <select id="getLesson" resultType="camelmap" statementType="PREPARED">
        SELECT * FROM LSN_M
		WHERE COMP_CD = #{compCd}
		  AND STOR_CD = #{storCd}
		  AND USE_YN = 'Y'
		  <if test="lsnFg != null and lsnFg != ''">
		  	AND LSN_FG = #{lsnFg}
		  </if>
		ORDER BY COMP_CD, STOR_CD, LSN_CD
    </select>
    <select id="getRegisterLessons" resultType="camelmap" statementType="PREPARED">
    /* 레슨목록가져오기 */
    SELECT A.COMP_CD, A.STOR_CD, A.LSN_NO, A.LSN_CD, 
			F.CODE AS LSN_TY, F.NAME AS LSN_TY_NM,
			A.LSN_TY AS LSN_REG_TY, 
			CASE WHEN A.LSN_TY = '1' THEN '신규' ELSE '재등록' END AS LSN_REG_NM, 
			A.LSN_FG, D.NAME AS LSN_FG_NM, 
			A.PAY_TP, G.NAME AS PAY_TP_NM,
			A.LSN_AMT,
			A.MEMBER_NO, B.MEMBER_NM, A.LSN_CNT, A.LSN_USE_CNT, A.LSN_MOD_CNT, A.LSN_CNT-ISNULL(A.LSN_USE_CNT, 0) LSN_REST_CNT, 
			A.LSN_ST_DT, A.LSN_ED_DT, A.LSN_EXP_WK, A.EMP_NO, C.EMP_NM, A.REMARK, A.REG_DT, A.CLS_FG
	FROM MEMBER_LSN_M A
	INNER JOIN MEMBER_M B
	ON A.COMP_CD = B.COMP_CD
	AND A.STOR_CD = B.STOR_CD
	AND A.MEMBER_NO = B.MEMBER_NO
	INNER JOIN EMP_M C
	ON A.COMP_CD = C.COMP_CD
	AND A.STOR_CD = C.STOR_CD
	AND A.EMP_NO = C.EMP_NO
	INNER JOIN COMMON_CODE_M D
	ON D.GROUP_CD = '003'	
	AND A.LSN_FG = D.CODE
	INNER JOIN (SELECT A.*, B.CODE, B.NAME FROM LSN_M A INNER JOIN COMMON_CODE_M B ON B.GROUP_CD = '005' AND A.LSN_FG = B.CODE) F
	ON A.COMP_CD = F.COMP_CD
	AND A.STOR_CD = F.STOR_CD
	AND A.LSN_CD = F.LSN_CD
	INNER JOIN COMMON_CODE_M G
	ON G.GROUP_CD = '008'
	AND G.CODE = A.PAY_TP
	WHERE A.COMP_CD = #{compCd}
		AND A.STOR_CD = #{storCd}
		<if test="memberNm != '' and memberNm != null">
		AND B.MEMBER_NM LIKE '%' + #{memberNm} + '%'
		</if>
		<if test="memberNo != '' and memberNo != null">
		AND A.MEMBER_NO = #{memberNo}
		</if>
    ORDER BY A.COMP_CD, A.STOR_CD, A.MEMBER_NO, A.REG_DT
    </select>
    <insert id="addMemberLesson" parameterType="hashmap">
    	INSERT INTO MEMBER_LSN_M (COMP_CD, STOR_CD, MEMBER_NO, LSN_NO, LSN_CD, LSN_TY, LSN_FG, LSN_AMT, PAY_TP, LSN_CNT, LSN_EXP_WK, EMP_NO, REMARK, REG_DT, CLS_FG)
		VALUES (#{compCd}, #{storCd}, #{memberNo}, (SELECT ISNULL(REPLICATE('0', 3-LEN(CAST(MAX(LSN_NO)+1 AS CHAR)))+CAST(MAX(LSN_NO)+1 AS VARCHAR), '001') 
													FROM MEMBER_LSN_M
													WHERE COMP_CD = #{compCd}
														AND STOR_CD = #{storCd}
														AND MEMBER_NO = #{memberNo}), #{lsnCd}, #{lsnTy}, #{lsnFg}, #{lsnAmt}, #{payTp}, ${lsnCnt}, #{lsnExpWk}, #{empNo}, #{remark}, #{entDt}, #{clsFg})
    </insert>
    <insert id="updateMemberLesson" parameterType="hashmap">
    	UPDATE MEMBER_LSN_M 
    	SET LSN_CNT = ${lsnCnt},
    		LSN_EXP_WK = ${lsnExpWk},
    		EMP_NO = #{empNo},
    		REG_DT = #{entDt},
    		REMARK = #{remark},
    		CLS_FG = #{clsFg}
    	WHERE COMP_CD = #{compCd}
    		AND STOR_CD = #{storCd}
    		AND MEMBER_NO = #{memberNo}
    		AND LSN_NO = #{lsnNo}
    </insert>
</mapper>